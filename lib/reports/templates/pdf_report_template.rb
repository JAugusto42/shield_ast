# frozen_string_literal: true

require "prawn"
require "prawn/table"

Prawn::Document.generate(output_file) do
  def extract_short_description(result)
    message = result[:extra]&.[](:message) || result["extra"]&.[]("message") || result.dig(:extra,
                                                                                           :message) || result.dig(
                                                                                             "extra", "message"
                                                                                           ) || "No description available"
    description = message.gsub("\n", " ").strip
    description.length > 80 ? "#{description[0..80]}..." : description
  end

  font "Helvetica"
  font_size 12

  text "Shield AST Scan Report", size: 20, style: :bold, align: :center
  move_down 10
  text "Generated by Shield AST v#{version}", size: 10, align: :center
  text generated_at, size: 10, align: :center
  move_down 20

  text "Summary", size: 16, style: :bold
  move_down 10
  text "Generated on: #{generated_at}"
  text "Scan Duration: #{scan_duration}"
  text "Total Issues Found: #{total_issues}"
  text "Severity Breakdown:", style: :bold
  text "Errors: #{severity_summary[:error_count]} (High Severity)", color: "DC3545" # Red
  text "Warnings: #{severity_summary[:warning_count]} (Medium Severity)", color: "FFC107" # Yellow
  text "Info: #{severity_summary[:info_count]} (Low Severity)", color: "17A2B8" # Blue
  move_down 20

  if sast_results.any?
    text "Static Application Security Testing (SAST)", size: 16, style: :bold
    text "Issues Found: #{sast_results.length}", size: 12
    move_down 10
    table_data = [%w[Severity Title File Description]]
    sast_results.each do |result|
      severity = result[:severity] || result["severity"] || result.dig(:extra,
                                                                       :severity) || result.dig("extra",
                                                                                                "severity") || "INFO"
      message = result.dig(:extra, :message) || result.dig("extra", "message") || "Unknown issue"
      title = message.split(".")[0].strip
      file_info = if result[:path] || result["path"]
                    "#{File.basename(result[:path] || result["path"])}:#{result.dig(
                      :start, :line
                    ) || result.dig("start", "line") || "N/A"}"
                  else
                    "N/A"
                  end
      description = extract_short_description(result)
      severity_color = case severity.upcase
                       when "ERROR" then "DC3545"
                       when "WARNING" then "FFC107"
                       else "17A2B8"
                       end
      table_data << [{ content: severity, text_color: severity_color }, title, file_info, description]
    rescue StandardError => e
      table_data << [{ content: "ERROR", text_color: "DC3545" }, "Invalid result", "N/A", "Error: #{e.message}"]
    end
    table table_data, header: true, width: bounds.width, cell_style: { size: 10 } do
      cells.padding = 5
      cells.borders = %i[top bottom left right]
      row(0).font_style = :bold
      row(0).background_color = "007BFF"
      row(0).text_color = "FFFFFF"
    end
    move_down 20
  end

  if sca_results.any?
    text "Software Composition Analysis (SCA)", size: 16, style: :bold
    text "Issues Found: #{sca_results.length}", size: 12
    move_down 10
    table_data = [["Severity", "Title", "File", "Vuln Version", "Fixed Version", "Description"]]
    sca_results.each_with_index do |result, _index|
      severity = result[:severity] || result["severity"] || "INFO"
      title = (result[:title] || result["title"] || "Unknown issue").to_s
      file = (result[:file] || result["file"] || "N/A").to_s
      vuln_version = (result[:vulnerable_version] || result["vulnerable_version"] || "N/A").to_s
      fixed_version = (result[:fixed_version] || result["fixed_version"] || "N/A").to_s
      description = (result[:description] || result["description"] || "No description").to_s
      description = description[0..80] + (description.length > 80 ? "..." : "")
      severity_color = case severity.upcase
                       when "ERROR" then "DC3545"
                       when "WARNING" then "FFC107"
                       else "17A2B8"
                       end
      table_data << [{ content: severity, text_color: severity_color }, title, file, vuln_version, fixed_version,
                     description]
    rescue StandardError => e
      table_data << [{ content: "ERROR", text_color: "DC3545" }, "Invalid result", "N/A", "N/A", "N/A",
                     "Error: #{e.message}"]
    end
    table table_data, header: true, width: bounds.width, cell_style: { size: 10 } do
      cells.padding = 5
      cells.borders = %i[top bottom left right]
      row(0).font_style = :bold
      row(0).background_color = "007BFF"
      row(0).text_color = "FFFFFF"
    end
    move_down 20
  end

  if iac_results.any?
    text "Infrastructure as Code (IaC)", size: 16, style: :bold
    text "Issues Found: #{iac_results.length}", size: 12
    move_down 10
    table_data = [%w[Severity Title File Description]]
    iac_results.each_with_index do |result, _index|
      severity = result[:severity] || result["severity"] || result.dig(:extra,
                                                                       :severity) || result.dig("extra",
                                                                                                "severity") || "INFO"
      message = result.dig(:extra, :message) || result.dig("extra", "message") || "Unknown issue"
      title = message.split(".")[0].strip
      file_info = if result[:path] || result["path"]
                    "#{File.basename(result[:path] || result["path"])}:#{result.dig(
                      :start, :line
                    ) || result.dig("start", "line") || "N/A"}"
                  else
                    "N/A"
                  end
      description = extract_short_description(result)
      severity_color = case severity.upcase
                       when "ERROR" then "DC3545"
                       when "WARNING" then "FFC107"
                       else "17A2B8"
                       end
      table_data << [{ content: severity, text_color: severity_color }, title, file_info, description]
    rescue StandardError => e
      table_data << [{ content: "ERROR", text_color: "DC3545" }, "Invalid result", "N/A", "Error: #{e.message}"]
    end
    table table_data, header: true, width: bounds.width, cell_style: { size: 10 } do
      cells.padding = 5
      cells.borders = %i[top bottom left right]
      row(0).font_style = :bold
      row(0).background_color = "007BFF"
      row(0).text_color = "FFFFFF"
    end
  end

  move_down 20
  text "Generated by Shield AST v#{version}", size: 10, align: :center
end
